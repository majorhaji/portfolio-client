{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServiceObject = void 0;\n/*!\n * Copyright 2022 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst events_1 = require(\"events\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\n/**\n * ServiceObject is a base class, meant to be inherited from by a \"service\n * object,\" like a BigQuery dataset or Storage bucket.\n *\n * Most of the time, these objects share common functionality; they can be\n * created or deleted, and you can get or set their metadata.\n *\n * By inheriting from this class, a service object will be extended with these\n * shared behaviors. Note that any method can be overridden when the service\n * object requires specific behavior.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass ServiceObject extends events_1.EventEmitter {\n  /*\n   * @constructor\n   * @alias module:common/service-object\n   *\n   * @private\n   *\n   * @param {object} config - Configuration object.\n   * @param {string} config.baseUrl - The base URL to make API requests to.\n   * @param {string} config.createMethod - The method which creates this object.\n   * @param {string=} config.id - The identifier of the object. For example, the\n   *     name of a Storage bucket or Pub/Sub topic.\n   * @param {object=} config.methods - A map of each method name that should be inherited.\n   * @param {object} config.methods[].reqOpts - Default request options for this\n   *     particular method. A common use case is when `setMetadata` requires a\n   *     `PUT` method to override the default `PATCH`.\n   * @param {object} config.parent - The parent service instance. For example, an\n   *     instance of Storage if the object is Bucket.\n   */\n  constructor(config) {\n    super();\n    this.metadata = {};\n    this.baseUrl = config.baseUrl;\n    this.parent = config.parent; // Parent class.\n    this.id = config.id; // Name or ID (e.g. dataset ID, bucket name, etc).\n    this.createMethod = config.createMethod;\n    this.methods = config.methods || {};\n    this.interceptors = [];\n    this.projectId = config.projectId;\n    if (config.methods) {\n      // This filters the ServiceObject instance (e.g. a \"File\") to only have\n      // the configured methods. We make a couple of exceptions for core-\n      // functionality (\"request()\" and \"getRequestInterceptors()\")\n      Object.getOwnPropertyNames(ServiceObject.prototype).filter(methodName => {\n        return (\n          // All ServiceObjects need `request` and `getRequestInterceptors`.\n          // clang-format off\n          !/^request/.test(methodName) && !/^getRequestInterceptors/.test(methodName) &&\n          // clang-format on\n          // The ServiceObject didn't redefine the method.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          this[methodName] ===\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ServiceObject.prototype[methodName] &&\n          // This method isn't wanted.\n          !config.methods[methodName]\n        );\n      }).forEach(methodName => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this[methodName] = undefined;\n      });\n    }\n  }\n  create(optionsOrCallback, callback) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const args = [this.id];\n    if (typeof optionsOrCallback === 'function') {\n      callback = optionsOrCallback;\n    }\n    if (typeof optionsOrCallback === 'object') {\n      args.push(optionsOrCallback);\n    }\n    // Wrap the callback to return *this* instance of the object, not the\n    // newly-created one.\n    // tslint: disable-next-line no-any\n    function onCreate() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const [err, instance] = args;\n      if (!err) {\n        self.metadata = instance.metadata;\n        if (self.id && instance.metadata) {\n          self.id = instance.metadata.id;\n        }\n        args[1] = self; // replace the created `instance` with this one.\n      }\n\n      callback(...args);\n    }\n    args.push(onCreate);\n    // eslint-disable-next-line prefer-spread\n    this.createMethod.apply(null, args);\n  }\n  delete(optionsOrCallback, cb) {\n    const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n    const ignoreNotFound = options.ignoreNotFound;\n    delete options.ignoreNotFound;\n    const methodConfig = typeof this.methods.delete === 'object' && this.methods.delete || {};\n    const reqOpts = extend(true, {\n      method: 'DELETE',\n      uri: ''\n    }, methodConfig.reqOpts, {\n      qs: options\n    });\n    // The `request` method may have been overridden to hold any special\n    // behavior. Ensure we call the original `request` method.\n    ServiceObject.prototype.request.call(this, reqOpts, function (err) {\n      if (err) {\n        if (err.code === 404 && ignoreNotFound) {\n          err = null;\n        }\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      callback(err, ...args);\n    });\n  }\n  exists(optionsOrCallback, cb) {\n    const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n    this.get(options, err => {\n      if (err) {\n        if (err.code === 404) {\n          callback(null, false);\n        } else {\n          callback(err);\n        }\n        return;\n      }\n      callback(null, true);\n    });\n  }\n  get(optionsOrCallback, cb) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const [opts, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n    const options = Object.assign({}, opts);\n    const autoCreate = options.autoCreate && typeof this.create === 'function';\n    delete options.autoCreate;\n    function onCreate(err, instance, apiResponse) {\n      if (err) {\n        if (err.code === 409) {\n          self.get(options, callback);\n          return;\n        }\n        callback(err, null, apiResponse);\n        return;\n      }\n      callback(null, instance, apiResponse);\n    }\n    this.getMetadata(options, (err, metadata) => {\n      if (err) {\n        if (err.code === 404 && autoCreate) {\n          const args = [];\n          if (Object.keys(options).length > 0) {\n            args.push(options);\n          }\n          args.push(onCreate);\n          self.create(...args);\n          return;\n        }\n        callback(err, null, metadata);\n        return;\n      }\n      callback(null, self, metadata);\n    });\n  }\n  getMetadata(optionsOrCallback, cb) {\n    const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n    const methodConfig = typeof this.methods.getMetadata === 'object' && this.methods.getMetadata || {};\n    const reqOpts = extend(true, {\n      uri: ''\n    }, methodConfig.reqOpts, {\n      qs: options\n    });\n    // The `request` method may have been overridden to hold any special\n    // behavior. Ensure we call the original `request` method.\n    ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n      this.metadata = body;\n      callback(err, this.metadata, res);\n    });\n  }\n  /**\n   * Return the user's custom request interceptors.\n   */\n  getRequestInterceptors() {\n    // Interceptors should be returned in the order they were assigned.\n    const localInterceptors = this.interceptors.filter(interceptor => typeof interceptor.request === 'function').map(interceptor => interceptor.request);\n    return this.parent.getRequestInterceptors().concat(localInterceptors);\n  }\n  setMetadata(metadata, optionsOrCallback, cb) {\n    const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n    const methodConfig = typeof this.methods.setMetadata === 'object' && this.methods.setMetadata || {};\n    const reqOpts = extend(true, {}, {\n      method: 'PATCH',\n      uri: ''\n    }, methodConfig.reqOpts, {\n      json: metadata,\n      qs: options\n    });\n    // The `request` method may have been overridden to hold any special\n    // behavior. Ensure we call the original `request` method.\n    ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n      this.metadata = body;\n      callback(err, this.metadata, res);\n    });\n  }\n  request_(reqOpts, callback) {\n    reqOpts = extend(true, {}, reqOpts);\n    if (this.projectId) {\n      reqOpts.projectId = this.projectId;\n    }\n    const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n    const uriComponents = [this.baseUrl, this.id || '', reqOpts.uri];\n    if (isAbsoluteUrl) {\n      uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n    }\n    reqOpts.uri = uriComponents.filter(x => x.trim()) // Limit to non-empty strings.\n    .map(uriComponent => {\n      const trimSlashesRegex = /^\\/*|\\/*$/g;\n      return uriComponent.replace(trimSlashesRegex, '');\n    }).join('/');\n    const childInterceptors = Array.isArray(reqOpts.interceptors_) ? reqOpts.interceptors_ : [];\n    const localInterceptors = [].slice.call(this.interceptors);\n    reqOpts.interceptors_ = childInterceptors.concat(localInterceptors);\n    if (reqOpts.shouldReturnStream) {\n      return this.parent.requestStream(reqOpts);\n    }\n    this.parent.request(reqOpts, callback);\n  }\n  request(reqOpts, callback) {\n    this.request_(reqOpts, callback);\n  }\n  /**\n   * Make an authenticated API request.\n   *\n   * @param {object} reqOpts - Request options that are passed to `request`.\n   * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n   */\n  requestStream(reqOpts) {\n    const opts = extend(true, reqOpts, {\n      shouldReturnStream: true\n    });\n    return this.request_(opts);\n  }\n}\nexports.ServiceObject = ServiceObject;\n(0, promisify_1.promisifyAll)(ServiceObject, {\n  exclude: ['getRequestInterceptors']\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","ServiceObject","promisify_1","require","events_1","extend","util_1","EventEmitter","constructor","config","metadata","baseUrl","parent","id","createMethod","methods","interceptors","projectId","getOwnPropertyNames","prototype","filter","methodName","test","forEach","undefined","create","optionsOrCallback","callback","self","args","push","onCreate","err","instance","apply","delete","cb","options","util","maybeOptionsOrCallback","ignoreNotFound","methodConfig","reqOpts","method","uri","qs","request","call","code","exists","get","opts","assign","autoCreate","apiResponse","getMetadata","keys","length","body","res","getRequestInterceptors","localInterceptors","interceptor","map","concat","setMetadata","json","request_","isAbsoluteUrl","indexOf","uriComponents","splice","x","trim","uriComponent","trimSlashesRegex","replace","join","childInterceptors","Array","isArray","interceptors_","slice","shouldReturnStream","requestStream","promisifyAll","exclude"],"sources":["/home/yusuf/coding/portfolio/node_modules/@google-cloud/storage/build/src/nodejs-common/service-object.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceObject = void 0;\n/*!\n * Copyright 2022 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst events_1 = require(\"events\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\n/**\n * ServiceObject is a base class, meant to be inherited from by a \"service\n * object,\" like a BigQuery dataset or Storage bucket.\n *\n * Most of the time, these objects share common functionality; they can be\n * created or deleted, and you can get or set their metadata.\n *\n * By inheriting from this class, a service object will be extended with these\n * shared behaviors. Note that any method can be overridden when the service\n * object requires specific behavior.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass ServiceObject extends events_1.EventEmitter {\n    /*\n     * @constructor\n     * @alias module:common/service-object\n     *\n     * @private\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string} config.createMethod - The method which creates this object.\n     * @param {string=} config.id - The identifier of the object. For example, the\n     *     name of a Storage bucket or Pub/Sub topic.\n     * @param {object=} config.methods - A map of each method name that should be inherited.\n     * @param {object} config.methods[].reqOpts - Default request options for this\n     *     particular method. A common use case is when `setMetadata` requires a\n     *     `PUT` method to override the default `PATCH`.\n     * @param {object} config.parent - The parent service instance. For example, an\n     *     instance of Storage if the object is Bucket.\n     */\n    constructor(config) {\n        super();\n        this.metadata = {};\n        this.baseUrl = config.baseUrl;\n        this.parent = config.parent; // Parent class.\n        this.id = config.id; // Name or ID (e.g. dataset ID, bucket name, etc).\n        this.createMethod = config.createMethod;\n        this.methods = config.methods || {};\n        this.interceptors = [];\n        this.projectId = config.projectId;\n        if (config.methods) {\n            // This filters the ServiceObject instance (e.g. a \"File\") to only have\n            // the configured methods. We make a couple of exceptions for core-\n            // functionality (\"request()\" and \"getRequestInterceptors()\")\n            Object.getOwnPropertyNames(ServiceObject.prototype)\n                .filter(methodName => {\n                return (\n                // All ServiceObjects need `request` and `getRequestInterceptors`.\n                // clang-format off\n                !/^request/.test(methodName) &&\n                    !/^getRequestInterceptors/.test(methodName) &&\n                    // clang-format on\n                    // The ServiceObject didn't redefine the method.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this[methodName] ===\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        ServiceObject.prototype[methodName] &&\n                    // This method isn't wanted.\n                    !config.methods[methodName]);\n            })\n                .forEach(methodName => {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this[methodName] = undefined;\n            });\n        }\n    }\n    create(optionsOrCallback, callback) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const args = [this.id];\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        if (typeof optionsOrCallback === 'object') {\n            args.push(optionsOrCallback);\n        }\n        // Wrap the callback to return *this* instance of the object, not the\n        // newly-created one.\n        // tslint: disable-next-line no-any\n        function onCreate(...args) {\n            const [err, instance] = args;\n            if (!err) {\n                self.metadata = instance.metadata;\n                if (self.id && instance.metadata) {\n                    self.id = instance.metadata.id;\n                }\n                args[1] = self; // replace the created `instance` with this one.\n            }\n            callback(...args);\n        }\n        args.push(onCreate);\n        // eslint-disable-next-line prefer-spread\n        this.createMethod.apply(null, args);\n    }\n    delete(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const ignoreNotFound = options.ignoreNotFound;\n        delete options.ignoreNotFound;\n        const methodConfig = (typeof this.methods.delete === 'object' && this.methods.delete) || {};\n        const reqOpts = extend(true, {\n            method: 'DELETE',\n            uri: '',\n        }, methodConfig.reqOpts, {\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, ...args) => {\n            if (err) {\n                if (err.code === 404 && ignoreNotFound) {\n                    err = null;\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            callback(err, ...args);\n        });\n    }\n    exists(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        this.get(options, err => {\n            if (err) {\n                if (err.code === 404) {\n                    callback(null, false);\n                }\n                else {\n                    callback(err);\n                }\n                return;\n            }\n            callback(null, true);\n        });\n    }\n    get(optionsOrCallback, cb) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const [opts, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const options = Object.assign({}, opts);\n        const autoCreate = options.autoCreate && typeof this.create === 'function';\n        delete options.autoCreate;\n        function onCreate(err, instance, apiResponse) {\n            if (err) {\n                if (err.code === 409) {\n                    self.get(options, callback);\n                    return;\n                }\n                callback(err, null, apiResponse);\n                return;\n            }\n            callback(null, instance, apiResponse);\n        }\n        this.getMetadata(options, (err, metadata) => {\n            if (err) {\n                if (err.code === 404 && autoCreate) {\n                    const args = [];\n                    if (Object.keys(options).length > 0) {\n                        args.push(options);\n                    }\n                    args.push(onCreate);\n                    self.create(...args);\n                    return;\n                }\n                callback(err, null, metadata);\n                return;\n            }\n            callback(null, self, metadata);\n        });\n    }\n    getMetadata(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.getMetadata === 'object' &&\n            this.methods.getMetadata) ||\n            {};\n        const reqOpts = extend(true, {\n            uri: '',\n        }, methodConfig.reqOpts, {\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n            this.metadata = body;\n            callback(err, this.metadata, res);\n        });\n    }\n    /**\n     * Return the user's custom request interceptors.\n     */\n    getRequestInterceptors() {\n        // Interceptors should be returned in the order they were assigned.\n        const localInterceptors = this.interceptors\n            .filter(interceptor => typeof interceptor.request === 'function')\n            .map(interceptor => interceptor.request);\n        return this.parent.getRequestInterceptors().concat(localInterceptors);\n    }\n    setMetadata(metadata, optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.setMetadata === 'object' &&\n            this.methods.setMetadata) ||\n            {};\n        const reqOpts = extend(true, {}, {\n            method: 'PATCH',\n            uri: '',\n        }, methodConfig.reqOpts, {\n            json: metadata,\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n            this.metadata = body;\n            callback(err, this.metadata, res);\n        });\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts);\n        if (this.projectId) {\n            reqOpts.projectId = this.projectId;\n        }\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl, this.id || '', reqOpts.uri];\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .filter(x => x.trim()) // Limit to non-empty strings.\n            .map(uriComponent => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/');\n        const childInterceptors = Array.isArray(reqOpts.interceptors_)\n            ? reqOpts.interceptors_\n            : [];\n        const localInterceptors = [].slice.call(this.interceptors);\n        reqOpts.interceptors_ = childInterceptors.concat(localInterceptors);\n        if (reqOpts.shouldReturnStream) {\n            return this.parent.requestStream(reqOpts);\n        }\n        this.parent.request(reqOpts, callback);\n    }\n    request(reqOpts, callback) {\n        this.request_(reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return this.request_(opts);\n    }\n}\nexports.ServiceObject = ServiceObject;\n(0, promisify_1.promisifyAll)(ServiceObject, { exclude: ['getRequestInterceptors'] });\n//# sourceMappingURL=service-object.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}