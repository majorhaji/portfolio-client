{"ast":null,"code":"\"use strict\";\n\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _HashStreamValidator_crc32cHash, _HashStreamValidator_md5Hash, _HashStreamValidator_md5Digest;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HashStreamValidator = void 0;\nconst crypto_1 = require(\"crypto\");\nconst stream_1 = require(\"stream\");\nconst crc32c_1 = require(\"./crc32c\");\nclass HashStreamValidator extends stream_1.Transform {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    _HashStreamValidator_crc32cHash.set(this, undefined);\n    _HashStreamValidator_md5Hash.set(this, undefined);\n    _HashStreamValidator_md5Digest.set(this, '');\n    this.crc32cEnabled = !!options.crc32c;\n    this.md5Enabled = !!options.md5;\n    if (this.crc32cEnabled) {\n      const crc32cGenerator = options.crc32cGenerator || crc32c_1.CRC32C_DEFAULT_VALIDATOR_GENERATOR;\n      __classPrivateFieldSet(this, _HashStreamValidator_crc32cHash, crc32cGenerator(), \"f\");\n    }\n    if (this.md5Enabled) {\n      __classPrivateFieldSet(this, _HashStreamValidator_md5Hash, (0, crypto_1.createHash)('md5'), \"f\");\n    }\n  }\n  _flush(callback) {\n    if (__classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\")) {\n      __classPrivateFieldSet(this, _HashStreamValidator_md5Digest, __classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\").digest('base64'), \"f\");\n    }\n    callback();\n  }\n  _transform(chunk, encoding, callback) {\n    this.push(chunk, encoding);\n    try {\n      if (__classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\")) __classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\").update(chunk);\n      if (__classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\")) __classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\").update(chunk);\n      callback();\n    } catch (e) {\n      callback(e);\n    }\n  }\n  test(hash, sum) {\n    const check = Buffer.isBuffer(sum) ? sum.toString('base64') : sum;\n    if (hash === 'crc32c' && __classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\")) {\n      return __classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\").validate(check);\n    }\n    if (hash === 'md5' && __classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\")) {\n      return __classPrivateFieldGet(this, _HashStreamValidator_md5Digest, \"f\") === check;\n    }\n    return false;\n  }\n}\nexports.HashStreamValidator = HashStreamValidator;\n_HashStreamValidator_crc32cHash = new WeakMap(), _HashStreamValidator_md5Hash = new WeakMap(), _HashStreamValidator_md5Digest = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_HashStreamValidator_crc32cHash","_HashStreamValidator_md5Hash","_HashStreamValidator_md5Digest","Object","defineProperty","exports","HashStreamValidator","crypto_1","require","stream_1","crc32c_1","Transform","constructor","options","undefined","crc32cEnabled","crc32c","md5Enabled","md5","crc32cGenerator","CRC32C_DEFAULT_VALIDATOR_GENERATOR","createHash","_flush","callback","digest","_transform","chunk","encoding","push","update","e","test","hash","sum","check","Buffer","isBuffer","toString","validate","WeakMap"],"sources":["/home/yusuf/coding/portfolio/node_modules/@google-cloud/storage/build/src/hash-stream-validator.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _HashStreamValidator_crc32cHash, _HashStreamValidator_md5Hash, _HashStreamValidator_md5Digest;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashStreamValidator = void 0;\nconst crypto_1 = require(\"crypto\");\nconst stream_1 = require(\"stream\");\nconst crc32c_1 = require(\"./crc32c\");\nclass HashStreamValidator extends stream_1.Transform {\n    constructor(options = {}) {\n        super();\n        _HashStreamValidator_crc32cHash.set(this, undefined);\n        _HashStreamValidator_md5Hash.set(this, undefined);\n        _HashStreamValidator_md5Digest.set(this, '');\n        this.crc32cEnabled = !!options.crc32c;\n        this.md5Enabled = !!options.md5;\n        if (this.crc32cEnabled) {\n            const crc32cGenerator = options.crc32cGenerator || crc32c_1.CRC32C_DEFAULT_VALIDATOR_GENERATOR;\n            __classPrivateFieldSet(this, _HashStreamValidator_crc32cHash, crc32cGenerator(), \"f\");\n        }\n        if (this.md5Enabled) {\n            __classPrivateFieldSet(this, _HashStreamValidator_md5Hash, (0, crypto_1.createHash)('md5'), \"f\");\n        }\n    }\n    _flush(callback) {\n        if (__classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\")) {\n            __classPrivateFieldSet(this, _HashStreamValidator_md5Digest, __classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\").digest('base64'), \"f\");\n        }\n        callback();\n    }\n    _transform(chunk, encoding, callback) {\n        this.push(chunk, encoding);\n        try {\n            if (__classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\"))\n                __classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\").update(chunk);\n            if (__classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\"))\n                __classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\").update(chunk);\n            callback();\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n    test(hash, sum) {\n        const check = Buffer.isBuffer(sum) ? sum.toString('base64') : sum;\n        if (hash === 'crc32c' && __classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\")) {\n            return __classPrivateFieldGet(this, _HashStreamValidator_crc32cHash, \"f\").validate(check);\n        }\n        if (hash === 'md5' && __classPrivateFieldGet(this, _HashStreamValidator_md5Hash, \"f\")) {\n            return __classPrivateFieldGet(this, _HashStreamValidator_md5Digest, \"f\") === check;\n        }\n        return false;\n    }\n}\nexports.HashStreamValidator = HashStreamValidator;\n_HashStreamValidator_crc32cHash = new WeakMap(), _HashStreamValidator_md5Hash = new WeakMap(), _HashStreamValidator_md5Digest = new WeakMap();\n//# sourceMappingURL=hash-stream-validator.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}