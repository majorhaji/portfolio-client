{"ast":null,"code":"/*! firebase-admin v11.5.0 */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProjectConfig = void 0;\n/*!\n * Copyright 2022 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n* Represents a project configuration.\n*/\nclass ProjectConfig {\n  /**\n   * The Project Config object constructor.\n   *\n   * @param response - The server side response used to initialize the Project Config object.\n   * @constructor\n   * @internal\n   */\n  constructor(response) {\n    if (typeof response.smsRegionConfig !== 'undefined') {\n      this.smsRegionConfig = response.smsRegionConfig;\n    }\n  }\n  /**\n   * Validates a project config options object. Throws an error on failure.\n   *\n   * @param request - The project config options object to validate.\n   */\n  static validate(request) {\n    if (!validator.isNonNullObject(request)) {\n      throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UpdateProjectConfigRequest\" must be a valid non-null object.');\n    }\n    const validKeys = {\n      smsRegionConfig: true\n    };\n    // Check for unsupported top level attributes.\n    for (const key in request) {\n      if (!(key in validKeys)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid UpdateProjectConfigRequest parameter.`);\n      }\n    }\n    // Validate SMS Regions Config if provided.\n    if (typeof request.smsRegionConfig !== 'undefined') {\n      auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n    }\n  }\n  /**\n   * Build the corresponding server request for a UpdateProjectConfigRequest object.\n   * @param configOptions - The properties to convert to a server request.\n   * @returns  The equivalent server request.\n   *\n   * @internal\n   */\n  static buildServerRequest(configOptions) {\n    ProjectConfig.validate(configOptions);\n    return configOptions;\n  }\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    // JSON serialization\n    const json = {\n      smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig)\n    };\n    if (typeof json.smsRegionConfig === 'undefined') {\n      delete json.smsRegionConfig;\n    }\n    return json;\n  }\n}\nexports.ProjectConfig = ProjectConfig;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProjectConfig","validator","require","error_1","auth_config_1","deep_copy_1","constructor","response","smsRegionConfig","validate","request","isNonNullObject","FirebaseAuthError","AuthClientErrorCode","INVALID_ARGUMENT","validKeys","key","SmsRegionsAuthConfig","buildServerRequest","configOptions","toJSON","json","deepCopy"],"sources":["/home/yusuf/coding/portfolio/node_modules/firebase-admin/lib/auth/project-config.js"],"sourcesContent":["/*! firebase-admin v11.5.0 */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectConfig = void 0;\n/*!\n * Copyright 2022 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n* Represents a project configuration.\n*/\nclass ProjectConfig {\n    /**\n     * The Project Config object constructor.\n     *\n     * @param response - The server side response used to initialize the Project Config object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.smsRegionConfig !== 'undefined') {\n            this.smsRegionConfig = response.smsRegionConfig;\n        }\n    }\n    /**\n     * Validates a project config options object. Throws an error on failure.\n     *\n     * @param request - The project config options object to validate.\n     */\n    static validate(request) {\n        if (!validator.isNonNullObject(request)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UpdateProjectConfigRequest\" must be a valid non-null object.');\n        }\n        const validKeys = {\n            smsRegionConfig: true,\n        };\n        // Check for unsupported top level attributes.\n        for (const key in request) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid UpdateProjectConfigRequest parameter.`);\n            }\n        }\n        // Validate SMS Regions Config if provided.\n        if (typeof request.smsRegionConfig !== 'undefined') {\n            auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n        }\n    }\n    /**\n     * Build the corresponding server request for a UpdateProjectConfigRequest object.\n     * @param configOptions - The properties to convert to a server request.\n     * @returns  The equivalent server request.\n     *\n     * @internal\n     */\n    static buildServerRequest(configOptions) {\n        ProjectConfig.validate(configOptions);\n        return configOptions;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        // JSON serialization\n        const json = {\n            smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n        };\n        if (typeof json.smsRegionConfig === 'undefined') {\n            delete json.smsRegionConfig;\n        }\n        return json;\n    }\n}\nexports.ProjectConfig = ProjectConfig;\n"],"mappings":"AAAA;AACA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAME,aAAa,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC9C,MAAMG,WAAW,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AACjD;AACA;AACA;AACA,MAAMF,aAAa,CAAC;EAChB;AACJ;AACA;AACA;AACA;AACA;AACA;EACIM,WAAW,CAACC,QAAQ,EAAE;IAClB,IAAI,OAAOA,QAAQ,CAACC,eAAe,KAAK,WAAW,EAAE;MACjD,IAAI,CAACA,eAAe,GAAGD,QAAQ,CAACC,eAAe;IACnD;EACJ;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,QAAQ,CAACC,OAAO,EAAE;IACrB,IAAI,CAACT,SAAS,CAACU,eAAe,CAACD,OAAO,CAAC,EAAE;MACrC,MAAM,IAAIP,OAAO,CAACS,iBAAiB,CAACT,OAAO,CAACU,mBAAmB,CAACC,gBAAgB,EAAE,+DAA+D,CAAC;IACtJ;IACA,MAAMC,SAAS,GAAG;MACdP,eAAe,EAAE;IACrB,CAAC;IACD;IACA,KAAK,MAAMQ,GAAG,IAAIN,OAAO,EAAE;MACvB,IAAI,EAAEM,GAAG,IAAID,SAAS,CAAC,EAAE;QACrB,MAAM,IAAIZ,OAAO,CAACS,iBAAiB,CAACT,OAAO,CAACU,mBAAmB,CAACC,gBAAgB,EAAG,IAAGE,GAAI,wDAAuD,CAAC;MACtJ;IACJ;IACA;IACA,IAAI,OAAON,OAAO,CAACF,eAAe,KAAK,WAAW,EAAE;MAChDJ,aAAa,CAACa,oBAAoB,CAACR,QAAQ,CAACC,OAAO,CAACF,eAAe,CAAC;IACxE;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAOU,kBAAkB,CAACC,aAAa,EAAE;IACrCnB,aAAa,CAACS,QAAQ,CAACU,aAAa,CAAC;IACrC,OAAOA,aAAa;EACxB;EACA;AACJ;AACA;AACA;AACA;EACIC,MAAM,GAAG;IACL;IACA,MAAMC,IAAI,GAAG;MACTb,eAAe,EAAE,CAAC,CAAC,EAAEH,WAAW,CAACiB,QAAQ,EAAE,IAAI,CAACd,eAAe;IACnE,CAAC;IACD,IAAI,OAAOa,IAAI,CAACb,eAAe,KAAK,WAAW,EAAE;MAC7C,OAAOa,IAAI,CAACb,eAAe;IAC/B;IACA,OAAOa,IAAI;EACf;AACJ;AACAvB,OAAO,CAACE,aAAa,GAAGA,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}