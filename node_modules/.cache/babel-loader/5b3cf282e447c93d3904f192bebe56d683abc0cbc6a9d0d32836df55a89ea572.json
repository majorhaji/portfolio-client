{"ast":null,"code":"const jose = require('jose');\nconst crypto = require('crypto');\nasync function retrieveSigningKeys(jwks) {\n  const results = [];\n  jwks = jwks.filter(_ref => {\n    let {\n      use\n    } = _ref;\n    return use === 'sig' || use === undefined;\n  }).filter(_ref2 => {\n    let {\n      kty\n    } = _ref2;\n    return kty === 'RSA' || kty === 'EC' || kty === 'OKP';\n  });\n  for (const jwk of jwks) {\n    try {\n      // The algorithm is actually not used in the Node.js KeyObject-based runtime\n      // passing an arbitrary value here and checking that KeyObject was returned\n      // later\n      const keyObject = await jose.importJWK(jwk, 'RS256');\n      if (!(keyObject instanceof crypto.KeyObject) || keyObject.type !== 'public') {\n        continue;\n      }\n      const getSpki = () => keyObject.export({\n        format: 'pem',\n        type: 'spki'\n      });\n      results.push({\n        get publicKey() {\n          return getSpki();\n        },\n        get rsaPublicKey() {\n          return getSpki();\n        },\n        getPublicKey() {\n          return getSpki();\n        },\n        ...(typeof jwk.kid === 'string' && jwk.kid ? {\n          kid: jwk.kid\n        } : undefined),\n        ...(typeof jwk.alg === 'string' && jwk.alg ? {\n          alg: jwk.alg\n        } : undefined)\n      });\n    } catch (err) {\n      continue;\n    }\n  }\n  return results;\n}\nmodule.exports = {\n  retrieveSigningKeys\n};","map":{"version":3,"names":["jose","require","crypto","retrieveSigningKeys","jwks","results","filter","use","undefined","kty","jwk","keyObject","importJWK","KeyObject","type","getSpki","export","format","push","publicKey","rsaPublicKey","getPublicKey","kid","alg","err","module","exports"],"sources":["/home/yusuf/coding/portfolio/node_modules/jwks-rsa/src/utils.js"],"sourcesContent":["const jose = require('jose');\nconst crypto = require('crypto');\n\nasync function retrieveSigningKeys(jwks) {\n  const results = [];\n\n  jwks = jwks\n    .filter(({ use }) => use === 'sig' || use === undefined)\n    .filter(({ kty }) => kty === 'RSA' || kty === 'EC' || kty === 'OKP');\n\n  for (const jwk of jwks) {\n    try {\n      // The algorithm is actually not used in the Node.js KeyObject-based runtime\n      // passing an arbitrary value here and checking that KeyObject was returned\n      // later\n      const keyObject = await jose.importJWK(jwk, 'RS256');\n      if (!(keyObject instanceof crypto.KeyObject) || keyObject.type !== 'public') {\n        continue;\n      }\n      const getSpki = () => keyObject.export({ format: 'pem', type: 'spki' });\n      results.push({\n        get publicKey() { return getSpki(); },\n        get rsaPublicKey() { return getSpki(); },\n        getPublicKey() { return getSpki(); },\n        ...(typeof jwk.kid === 'string' && jwk.kid ? { kid: jwk.kid } : undefined),\n        ...(typeof jwk.alg === 'string' && jwk.alg ? { alg: jwk.alg } : undefined)\n      });\n    } catch (err) {\n      continue;\n    }\n  }\n\n  return results;\n}\n\nmodule.exports = {\n  retrieveSigningKeys\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEhC,eAAeE,mBAAmB,CAACC,IAAI,EAAE;EACvC,MAAMC,OAAO,GAAG,EAAE;EAElBD,IAAI,GAAGA,IAAI,CACRE,MAAM,CAAC;IAAA,IAAC;MAAEC;IAAI,CAAC;IAAA,OAAKA,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAKC,SAAS;EAAA,EAAC,CACvDF,MAAM,CAAC;IAAA,IAAC;MAAEG;IAAI,CAAC;IAAA,OAAKA,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK;EAAA,EAAC;EAEtE,KAAK,MAAMC,GAAG,IAAIN,IAAI,EAAE;IACtB,IAAI;MACF;MACA;MACA;MACA,MAAMO,SAAS,GAAG,MAAMX,IAAI,CAACY,SAAS,CAACF,GAAG,EAAE,OAAO,CAAC;MACpD,IAAI,EAAEC,SAAS,YAAYT,MAAM,CAACW,SAAS,CAAC,IAAIF,SAAS,CAACG,IAAI,KAAK,QAAQ,EAAE;QAC3E;MACF;MACA,MAAMC,OAAO,GAAG,MAAMJ,SAAS,CAACK,MAAM,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEH,IAAI,EAAE;MAAO,CAAC,CAAC;MACvET,OAAO,CAACa,IAAI,CAAC;QACX,IAAIC,SAAS,GAAG;UAAE,OAAOJ,OAAO,EAAE;QAAE,CAAC;QACrC,IAAIK,YAAY,GAAG;UAAE,OAAOL,OAAO,EAAE;QAAE,CAAC;QACxCM,YAAY,GAAG;UAAE,OAAON,OAAO,EAAE;QAAE,CAAC;QACpC,IAAI,OAAOL,GAAG,CAACY,GAAG,KAAK,QAAQ,IAAIZ,GAAG,CAACY,GAAG,GAAG;UAAEA,GAAG,EAAEZ,GAAG,CAACY;QAAI,CAAC,GAAGd,SAAS,CAAC;QAC1E,IAAI,OAAOE,GAAG,CAACa,GAAG,KAAK,QAAQ,IAAIb,GAAG,CAACa,GAAG,GAAG;UAAEA,GAAG,EAAEb,GAAG,CAACa;QAAI,CAAC,GAAGf,SAAS;MAC3E,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACZ;IACF;EACF;EAEA,OAAOnB,OAAO;AAChB;AAEAoB,MAAM,CAACC,OAAO,GAAG;EACfvB;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}